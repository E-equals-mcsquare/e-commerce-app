name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      APP_NAME: ecommerce-app
      SERVICE_NAME: user-service
      AWS_REGION: us-east-1
      ECR_REGISTRY: 258173133840.dkr.ecr.us-east-1.amazonaws.com
      ECR_REPOSITORY: myapps/$APP_NAME-repository
      IMAGE_TAG: $SERVICE_NAME
      DOCKER_FILE_LOCATION: ./backend/$SERVICE_NAME

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 16

    - name: Install Dependencies
      run: npm install --prefix ./backend/$SERVICE_NAME

    # Install AWS CLI
    - name: Install AWS CLI
      run: |
        curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
        unzip awscliv2.zip
        sudo ./aws/install --update
        aws --version

    # Configure AWS Credentials
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: $AWS_REGION

    # Log in to AWS ECR
    - name: Log in to AWS ECR
      run: |
        aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ECR_REGISTRY

    # Build the Docker image
    - name: Build Docker Image
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG $DOCKER_FILE_LOCATION
        docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # Push the Docker image to ECR
    - name: Push Docker Image to Amazon ECR
      run: |
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # Fill in the new image ID in the Amazon ECS task definition
    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: $APP_NAME-task-$SERVICE_NAME
        container-name: $SERVICE_NAME
        image: $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    # Deploy Amazon ECS task definition
    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: $APP_NAME-$SERVICE_NAME
        cluster: $APP_NAME-cluster
        wait-for-service-stability: true
